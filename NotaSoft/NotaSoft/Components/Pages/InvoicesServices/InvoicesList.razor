@page "/notas-servico/lista"
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory

<PageTitle>Notas Fiscais - Lista</PageTitle>

<h3>Lista de notas</h3>

<hr>

<table class="table table-striped table-hover table-bordered rounded-2 overflow-hidden">
	<thead>
		<tr>
			<th scope="col">#Id</th>
			<th scope="col">Nome</th>
			<th scope="col">CPF</th>
			<th scope="col">Preço un. (R$)</th>
			<th scope="col">Quantidade</th>
			<th scope="col">Preço total (R$)</th>
		</tr>

	</thead>
	<tbody class="table-group-divider">
		@foreach (var invoice in invoices!)
		{
			<tr>
				<th scope="row">@invoice.Id</th>
				<td>@invoice.Name</td>
				<td>@invoice.Cpf</td>
				<td>@invoice.Price</td>
				<td>@invoice.Amount</td>
				<td>@invoice.TotalPrice</td>
			</tr>
		}
	</tbody>
</table>

<style>

hr {
	margin-bottom: 32px;
}

</style>

@code {
	List<Invoice>? invoices = [];

	public class Invoice
	{
		[JsonPropertyName("id")]
		public int Id { get; set; }
		[JsonPropertyName("name")]
		public string Name { get; set; } = string.Empty;
		[JsonPropertyName("cpf")]
		public string Cpf { get; set; } = string.Empty;
		[JsonPropertyName("price")]
		public double Price { get; set; }
		[JsonPropertyName("amount")]
		public int Amount { get; set; }
		public double TotalPrice => Price * Amount;
	}

	public async Task ListAllPosts()
	{
		var client = ClientFactory.CreateClient();

		var response = await client.GetAsync("http://localhost:7237/Invoices");

		var jsonResponse = await response.Content.ReadAsStringAsync();

		Console.WriteLine(jsonResponse);

		invoices = JsonSerializer.Deserialize<List<Invoice>>(jsonResponse);

		Console.WriteLine(invoices[0].Name);

		StateHasChanged();
	}

	protected override async Task OnInitializedAsync()
	{
		await ListAllPosts();
	}

}
